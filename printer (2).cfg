 
#octopus with tmc2209  for voron V2.4
# See docs/Config_Reference.md for a description of parameters.

[mcu]
# serial = /dev/serial/by-id/usb-Klipper_lpc1769_LPC1769-1-if00
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_xqz-if00

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100,100,50  # an example

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 8000
max_accel_to_decel: 8000
max_z_velocity: 5
max_z_accel: 50



[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14

position_max: 200
microsteps: 32
rotation_distance: 40
full_steps_per_rotation:200 
#endstop_pin: ^!PG6    # stop0
endstop_pin: tmc2209_stepper_x: virtual_endstop
position_endstop: 350

position_max: 350

##--------------------------------------------------------------------
##	把前面#删掉，设置限位开关位置
##--------------------------------------------------------------------
homing_speed: 30   #Max 100          回家速度
homing_retract_dist: 0
homing_positive_dir: true
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: True
run_current: 0.6
hold_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 2000

driver_sgthrs: 50
diag_pin:^PG6


[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 32    # stop1
rotation_distance: 40
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: ^!PG9
endstop_pin: tmc2209_stepper_y: virtual_endstop

position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 30  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: True
run_current: 0.6
hold_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 2000

driver_sgthrs: 50
diag_pin: ^PG9
#####################################################################
#	z homing
#####################################################################

[safe_z_home]
home_xy_position: 120,60 # Change coordinates to the center of your print bed
speed: 250
z_hop: 10               # Move up 10mm
z_hop_speed: 5


#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
# pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
# pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
pin: ~PC5

#--------------------------------------------------------------------

x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3


#####################################################################
#	Bltouch
#####################################################################

#[bltouch]
##	Bltouch - If you use this section , please comment the [probe] section
##	More infomation at : https://www.klipper3d.org/BLTouch.html
##	This bltouch is not used for Z height, only Quad Gantry Leveling
##	In Z+ Position
#pin_up_touch_mode_reports_triggered: False

#sensor_pin: PB6
##	In Y+ Position
#control_pin: PB7
#x_offset: 16
#y_offset: 34
#z_offset: 0
#z_offset: 1.5
#speed: 5.0
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.5
#samples_tolerance_retries: 3

#[idle_timeout]
#timeout: 1800

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
max_adjust: 10
horizontal_move_z: 18
gantry_corners:
	-60,-10
	410, 410
##	Probe points
points:
	80,60
	80,250
	300,250
	300,60

speed: 150

[bed_mesh]
speed: 200
horizontal_move_z: 10
mesh_min: 100,80
mesh_max: 335, 300
probe_count: 5,5

### Driver 2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

endstop_pin: probe:z_virtual_endstop
#endstop_pin: PC5
#endstop_pin: ^zboard:PC1
#position_endstop: 0


position_max: 350

##--------------------------------------------------------------------
#position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3


##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
uart_address: 0
interpolate: True
run_current: 1.2
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 5000

### Driver 3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: True
run_current: 1.2
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 5000
### Driver 4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64


##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 1.2
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 5000
### Driver 5

[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64


[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current: 1.2
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 5000


### Driver 6
[extruder]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.67	#bmg 
#rotation_distance: 37.698	#orbiter
rotation_distance: 24.5	#H2
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
#gear_ratio: 50:17				#BMG Gear Ratio
gear_ratio: 7:1	# H2
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_velocity: 100
max_extrude_only_accel: 300
max_extrude_only_distance: 102
##      In E0 OUT Position
heater_pin: PA2
#sensor_type: ATC Semitec 104GT-2
#sensor_type: PT1000
#sensor_pin: PF4

sensor_type: MAX31865
sensor_pin: PF8
spi_speed:4000000
spi_software_miso_pin:PA6
spi_software_mosi_pin:PA7
spi_software_sclk_pin:PA5

#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2


#control: pid
max_power: 0.75
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721


min_temp: 5
max_temp: 500
max_power: 1.0
min_extrude_temp: 180

##	In E0-MOT Position
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.35
hold_current: 0.35
sense_resistor: 0.110
stealthchop_threshold: 0

##重点在下面
##  In E4-MOT Position
[extruder_stepper my_extra_stepper]
extruder = extruder  #同步到extruder上
step_pin: PE6
dir_pin: PA14
enable_pin: !PE0
microsteps:16
rotation_distance: 24.6  #H2
gear_ratio: 7:1	# H2
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
#shared_heater: extruder
#nozzle_diameter: 0.400
#filament_diameter: 1.75

##  In E4-MOT Position
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder_stepper my_extra_stepper]
uart_pin: PD3

interpolate: false
run_current: 0.4
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

#[gcode_macro Movefilament]
#gcode:
#  MANUAL_STEPPER STEPPER=my_stepper MOVE=100 SPEED=80


#[gcode_button my_gcode_button]
#pin: ^!PA1
#   The pin on which the button is connected. This parameter must be
#   provided.

#press_gcode:
#      MANUAL_STEPPER STEPPER=my_stepper MOVE=10 SPEED=50
#      MANUAL_STEPPER STEPPER= YCC MOVE=10 SPEED=50
#   A list of G-Code commands to execute when the button is released.
#   G-Code templates are supported. The default is to not run any
#   commands on a button release.


#[manual_stepper my_stepper]
#step_pin:PE1
#dir_pin:!PE0
#enable_pin:!PC5
#microsteps:16
#rotation_distance:23.55
#   See the "stepper" section for a description of these parameters.
#velocity:80
#   Set the default velocity (in mm/s) for the stepper. This value
#   will be used if a MANUAL_STEPPER command does not specify a SPEED
#   parameter. The default is 5mm/s.
#accel:80

#[tmc2209 manual_stepper my_stepper]
#uart_pin: PD11

#interpolate: false
#run_current: 0.6
#hold_current: 0.6
#sense_resistor: 0.110
#stealthchop_threshold: 0





[heater_bed]
heater_pin: PD15
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF3
#control: pid
control: watermark
#pid_Kp: 22
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 130

#fan for printed model FAN0
[fan]
pin: PD14

#fan for hotend FAN1
[heater_fan my_nozzle_fan]
pin: PA8
shutdown_speed: 1


#[temperature_sensor box]
#sensor_type:ATC Semitec 104GT-2
#sensor_pin:PC1
#pullup_resistor: 4700


#[heater_generic Chamber]
#gcode_id:
#   The id to use when reporting the temperature in the M105 command.
#   This parameter must be provided.
##heater_pin: PA1
#max_power: 1
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: PC2
#smooth_time:
#control: watermark
#pid_Kp:22
#pid_Ki:1.08
#pid_Kd:114
#pwm_cycle_time:
#min_temp: 1
#max_temp: 100
#   See the "extruder" section for the definition of the above
#   parameters.
#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#accel_per_hz: 50  # default is 75
#probe_points:
#    100,100,20  # an example


#####################################################################
#	Displays
#####################################################################

#--------------------------------------------------------------------

#[display]
#	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: PC11
#a0_pin: PD2
#rst_pin: PC10
#encoder_pins: ^PC6,^PC7
#click_pin: ^!PA8
#contrast: 63
#spi_bus: spi1
##spi_software_mosi_pin: PA7
##spi_software_miso_pin: PA6
##spi_software_sclk_pin: PA5

#[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
#pin: PC12
#chain_count: 3
#chain_count: 60
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
##[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------



[gcode_macro Rset_BLTOUCH]

gcode:
    BLTOUCH_DEBUG COMMAND=reset

[gcode_macro PRINT_START]

gcode:
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT

[gcode_macro PRINT_END]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
    G28 x, y 

[gcode_macro POSITION]
gcode:
  GET_POSITION

[virtual_sdcard]
path: ~/gcode_files

[display_status]


[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}
#rename_existing: BASE_PAUSE
#default_parameter_E: 1.7
#gcode:
#  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#  {% set max_z = printer.toolhead.axis_maximum.z|float %}
#  {% set act_z = printer.toolhead.position.z|float %}
#  {% if act_z < (max_z - 2.0) %}
#      {% set z_safe = 2.0 %}
#  {% else %}
#      {% set z_safe = max_z - act_z %}
#  {% endif %}
#  SAVE_GCODE_STATE NAME=PAUSE_state
#  BASE_PAUSE
#  G91
#  G1 E-{E} F2100
#  G1 Z{z_safe} F900
#  G90
# G0 X{x_park} Y{y_park} F6000
#  G91


[gcode_macro RESUME]
rename_existing: BASE_RESUME
#default_parameter_E: 1      # edit to your preferred retract length
gcode:
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME


[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro BED_GRDTEMP]
gcode:
    # get current temperate
    {% set start_temp = printer.heater_bed.temperature | round(0, "ceil") %}
	{% set grade_count 	 = params.G|default(10)|int %}
	{% set grade_minutes = params.Min|default(20)|int %} 
	{% set grade_time = grade_minutes*30 %} 
	{% set grade_target = params.T|default(55)|float %}
	{% set grade_delta = ((grade_target-start_temp)/grade_count) | round(1, "ceil") %}
	M118 STARTTEMP: {start_temp}, TARGET: {grade_target}, count: {grade_count}, gap_minutes: {grade_minutes}, grade_delta: {grade_delta}

    # for loop
	{% for grade_index in range(grade_count) %}
        {% set current_target = start_temp + (grade_index+1)*grade_delta %}
        M118 GI:{grade_index} GT: {current_target}
        M190 S{current_target}
		{% if current_target < 70 %}
			#M141 S0
			#CFAN_OFF
		{% endif %}
        M105
		{% for grade_tiny_time in range(grade_time) %}
        	M118 second:{grade_tiny_time*2} GT: {current_target}
        	G4 P2000
        	M105
		{% endfor %}
        M105
	{% endfor %}





[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 63.4
#*# shaper_type_y = 3hump_ei
#*# shaper_freq_y = 59.8
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 12.850
#*# pid_ki = 0.360
#*# pid_kd = 114.689
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.064635, 0.011510, -0.010365, 0.020260, 0.100260
#*# 	  0.002135, -0.073490, -0.094115, -0.064740, 0.017760
#*# 	  -0.014115, -0.092240, -0.144115, -0.110365, -0.019115
#*# 	  0.008385, -0.074115, -0.115990, -0.091615, -0.004740
#*# 	  0.062760, 0.009010, -0.042240, -0.005365, 0.087135
#*# tension = 0.2
#*# min_x = 100.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 80.0
#*# x_count = 5
#*# max_y = 300.0
#*# mesh_x_pps = 2
#*# max_x = 335.0
